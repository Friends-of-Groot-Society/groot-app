server.port=8080 

system.environment=prod 
version=1.1.1   

### Security
#security.basic.enable: false
#security.ignored=/**

##########  Oracle AWS ##########
spring.datasource.url=jdbc:oracle:thin:@thomas.cmcadlepsyx9.us-east-1.rds.amazonaws.com:1521:thomas
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.username=thomas
spring.datasource.password=${ORACLE_DB_PASSWORD}
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle8iDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect
#spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.
spring.jpa.hibernate.ddl-auto = create-drop
  #update # validate # create # create-drop

#spring.sql.init.mode=never
spring.sql.init.continue-on-error=true

spring.mvc.format.date=yyyy-MM-dd
spring.jpa.show-sql=true
spring.jpa.format-sql=true
#spring.jpa.defer-datasource-initialization=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true



# we need the below property to turn off hibernate auto validation
# we are using constraints validation and customizing our data validation
# rules
#spring.jpa.properties.javax.persistence.validation.mode=none



########## Log SQL statements ##########
logging.level.org.hibernate.cache=info 
logging.level.org.hibernate.stat=info

# Log slow queries
#spring.jpa.properties.hibernate.session.events.log.LOG_QUERIES_SLOWER_THAN_MS=1
#spring.jpa.properties.hibernate.generate_statistics=true
#spring.jpa.properties.hibernate.session.events.log=org.hibernate.event.service.spi.EventListenerRegistry

########## Log Levels ##########
#management.endpoints.web.exposure.include=*
#management.endpoints.web.exposure.include=health,info,env,metrics,loggers,auditevents,httptrace
logging.level.com.friendsofgroot.app=info  
logging.level.org.springframework=info

logging.appender.console=org.springframework.boot.logging.logback.ConsoleAppender
#logging.appender.console=org.springframework.boot.logging.logback.ConsoleAppender
logging.appender.console.layout=org.springframework.boot.logging.logback.ColorConsoleLayout
logging.appender.console.layout.pattern=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${PID}){magenta} %clr(---){faint} %clr([%5p]) %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(---){faint} %clr([%t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%xEx            

### Caching
#spring.jpa.properties.javax.persistence.sharedCache.mode=ENABLE_SELECTIVE
#spring.jpa.properties.javax.persistence.cache.storeMode=REFRESH
#spring.jpa.properties.javax.persistence.cache.retrieveMode=BYPASS

########## Docker #################################################
#/connect todos-user@localhost:3306
#docker run --detach
#--env MYSQL_ROOT_PASSWORD=dummypassword
#--env MYSQL_USER=todos-user
#--env MYSQL_PASSWORD=dummytodos
#--env MYSQL_DATABASE=todos
#--name mysql
#--publish 3306:3306
#mysql:8-oracle

########## MySQL Container ##########
#spring.datasource.url=jdbc:mysql://localhost:3306/todos
#spring.datasource.url=jdbc:mysql://localhost:3306/test_db?createDatabaseIfNotExist=true
#spring.datasource.username=thomas
#spring.datasource.password=password
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# #spring2.4 => spring.jpa.hibernate.dialect.MySQL5InnoDBDialect     #  .MySQL8Dialect
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect


#spring.activemq.in-memory=true
#spring.activemq.pooled=false
#com.friendsofgroot.server=10.10.10.123
#com.friendsofgroot.port=3330
#com.friendsofgroot.user=
#com.friendsofgroot.password=
