create table if not exists roles
(
    id   NUMBER not null,
    name varchar(255),
    primary key (id)
);

create table if not exists user_roles
(
    id      NUMBER not null,
    role_id NUMBER not null,
    user_userid NUMBER not null,
    primary key (id)
);

create table if not exists users
(
    USERID      NUMBER auto_increment not null,
    USERNAME    VARCHAR(255),
    PASSWORD    VARCHAR(50),
    LASTNAME    VARCHAR(255),
    FIRSTNAME   VARCHAR(255),
    GROUPS      NUMBER(10, 0),
    USERTYPE    NUMBER(10, 0),
    PHONE       VARCHAR(50),
    EMAIL       VARCHAR(255),
    CUSURL      VARCHAR(255),
    PHOTOPATH   VARCHAR(400),
    USERGROUP   VARCHAR(100),
    ISACTIVE    NUMBER(10, 0),
    CONTACTTYPE NUMBER(10, 0),
    ID          VARCHAR(50),
    primary key (USERID)
);

create table if not exists chain_users
(
    chainId NUMBER auto_increment primary key,
    userId  VARCHAR(60),
    address VARCHAR(60)
);


create table if not exists chain
(
    chain_id           NUMBER not null,
    name               varchar(255),
    symbol              varchar(255),
    description        varchar(255),
    long_description   varchar(255),
    icon_url           varchar(255),
    category    varchar(255),
    chain_list_icon    varchar(255),
    rpc_url            varchar(255),
    id                 NUMBER,
    block_explorer_url varchar(255),
    primary key (chain_id)
);
create table if not exists chain_users
(
    id       NUMBER not null,
    chain_id NUMBER not null,
    user_id  NUMBER not null,
    primary key (id)
);
--     create table if not exists attribute (attrid NUMBER, trait_type varchar(255), valu varchar(255), metadata_metadata_id NUMBER, primary key (attrid));
alter table chain
    add chain_id NUMBER;
alter table chain
    add block_explorer_url varchar(255);
alter table chain
    add chain_list_icon varchar(255);
alter table chain
    add icon_url varchar(255);
alter table chain
    add long_description varchar(255);
alter table chain
    add rpc_url varchar(255);
alter table chain_users
    add chain_id NUMBER NOT NULL;

create table if not exists addresses
(
    id      NUMBER not null,
    address varchar(255),
    chain   varchar(255),
    email   varchar(255),
    name    varchar(255),
    owner   varchar(255),
    primary key (id)
);
create table if not exists nft
(
    id                      NUMBER not null,
    amount                  NUMBER not null,
    name                    varchar(255),
    metadata_id_metadata_id NUMBER,
    id                      NUMBER,
    primary key (id)
);
create table if not exists nft_address
(
    id           NUMBER generated by default as identity,
    address      varchar(255),
    native_token float(53),
    native       float(53),
    tokens       float(24),
    primary key (id)
);
create table if not exists nft_ref
(
    id      NUMBER not null,
    address varchar(255),
    chain   varchar(255),
    email   varchar(255),
    name    varchar(255),
    owner   varchar(255),
    primary key (id)
);

create table if not exists cointable
(
    coinid     NUMBER not null,
    coinsymbol varchar(255),
    cointoken  varchar(255),
    pricetotal float(53),
    purchased  NUMBER not null,
    primary key (coinid)
);
create table if not exists weblinks
(
    id             NUMBER not null,
    downloadstatus smallint,
    host           varchar(255),
    htmlpage       varchar(255),
    url            varchar(255),
    primary key (id)
);


create table if not exists attribute
(
    attrid               NUMBER,
    trait_type           varchar(255),
    valu                 varchar(255),
    metadata_metadata_id NUMBER,
    primary key (attrid)
);

create table metadata
(
    metadata_id NUMBER not null,
    description varchar(255),
    image       varchar(255),
    name        varchar(255),
    nft_id      NUMBER,
    primary key (metadata_id)
);
create table nft
(
    id                      NUMBER not null,
    amount                  NUMBER not null,
    name                    varchar(255),
    metadata_id_metadata_id NUMBER,
    id                      NUMBER,
    primary key (id)
);
create table nft_address
(
    id           NUMBER generated by default as identity,
    address      varchar(255),
    native_token float(53),
    native       float(53),
    tokens       float(24),
    primary key (id)
);
create table nft_ref
(
    id      NUMBER not null,
    address varchar(255),
    chain   varchar(255),
    email   varchar(255),
    name    varchar(255),
    owner   varchar(255),
    primary key (id)
);

create table weblinks
(
    id             NUMBER not null,
    downloadstatus smallint,
    host           varchar(255),
    htmlpage       varchar(255),
    url            varchar(255),
    primary key (id)
);
create sequence address_seq start with 10 increment by 50;
create sequence attribute_seq start with 1000 increment by 50;
create sequence chain_seq start with 100 increment by 50;
create sequence cointable_seq start with 20 increment by 50;
create sequence id_maker start with 2000 increment by 50;
create sequence metadata_seq start with 200 increment by 50;
create sequence nft_ref_seq start with 500 increment by 50;
create sequence nft_seq start with 600 increment by 50;
create sequence roles_seq start with 700 increment by 50;
create sequence weblinks_seq start with 800 increment by 50;
alter table ADDRESS
    add constraint FKsb9kcjn7av3aujmp83pagwiny foreign key (nft_address_id) references nft_address;
alter table ADDRESS
    add constraint FKt3i7rgmxmmkev35dxs947wasb foreign key (userid) references users;
alter table attribute
    add constraint FKik918ybmves03ibw6l10jj8d2 foreign key (metadata_metadata_id) references metadata;
alter table chain_users
    add constraint FKc12l3fx8me9k15hv0epjpjpbl foreign key (chain_id) references chain;
alter table chain_users
    add constraint FK3psni4ui5db7mcih64fov3v39 foreign key (userid) references users;
alter table metadata
    add constraint FK7xw0e76t7gnn5x9a254683a8 foreign key (nft_id) references nft;
alter table nft
    add constraint FK7w00r1rprr2020ho6cbmwc5kh foreign key (metadata_id_metadata_id) references metadata;
alter table nft
    add constraint FKav9aho8kdsp9rh22jdlocuy7r foreign key (id) references nft_address;